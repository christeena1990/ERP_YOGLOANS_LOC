@model ERP_YOGLOANS_LOCAL.Models.Customer_AddBank_Model

<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Add Bank Details</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.css" />
    @*<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>*@
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js"></script>

  

    <script src="~/Scripts/jquery-3.6.0.min.js"></script>




    <style>
        /* Your existing CSS styles */
        .app-main__inner {
            margin-top: -30px;
            padding: 10px;
            font-family: Arial, sans-serif; /* Example font family */
        }

        .card-title h6 {
            font-weight: bold;
            font-size: 25px;
            margin: 0;
            color: maroon;
        }


        /* Style for radio button labels */
        .radio-label {
            font-weight: bold;
            margin-right: 10px;
            font-size: 14px;
            color: black; /* Default color */
        }

            /* Style for selected radio button labels */
            .radio-label.selected {
                color: red; /* Maroon color for selected label */
            }

        /*----------------------------------------------------------------------------*/


        .search-container {
            margin-top: 8px;
            padding: 15px; /* Increased padding for more height */
            border: 1px solid #ccc;
            border-radius: 5px;
            width: 100%; /* Set width to 100% to occupy full container width */
        }

            /* Style for labels inside the search container */
            .search-container label {
                font-weight: bold;
                margin-right: 10px;
                font-size: 14px;
            }

            /* Style for radio buttons inside the search container */
            .search-container input[type="radio"] {
                margin-right: 8px;
                transform: scale(0.9); /* Adjusted scale for radio button size */
                -webkit-appearance: none;
                -moz-appearance: none;
                appearance: none;
                border: 2px solid #007bff;
                border-radius: 50%;
                width: 18px;
                height: 18px;
                outline: none;
            }

                .search-container input[type="radio"]:checked {
                    background-color: #007bff;
                }

            /* Style for text input field */
            .search-container input[type="text"] {
                padding: 10px; /* Adjust padding as needed */
                margin-right: 8px;
                border: 1px solid #ccc;
                border-radius: 3px;
                font-size: 14px;
                width: 300px; /* Increased width for input text */
            }

            /* Style for buttons inside the search container */
            .search-container button {
                padding: 8px 12px; /* Increased padding for button */
                background-color: #007bff;
                color: white;
                border: none;
                border-radius: 3px;
                cursor: pointer;
                font-size: 14px;
                margin-left: 10px; /* Added space between buttons */
            }

                .search-container button:hover {
                    background-color: #0056b3;
                }

        /* Style for the dropdown container */
        .dropdown {
            position: relative;
            display: inline-block;
        }

        /* Style for the suggestions dropdown */
        .dropdown-content {
            display: none;
            position: absolute;
            background-color: #f9f9f9;
            box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
            z-index: 1;
            max-height: 200px; /* Set a maximum height for scrolling */
            overflow-y: auto; /* Enable vertical scrolling */
            overflow-x: hidden; /* Hide horizontal scrolling */
            width: 100%; /* Ensure it occupies the same width as the input */
        }

            /* Style for individual suggestion items */
            .dropdown-content div {
                color: black;
                padding: 12px 16px;
                text-decoration: none;
                display: block;
                cursor: pointer;
            }

                .dropdown-content div:hover {
                    background-color: #f1f1f1;
                }


        /* -------------------------------------------------------------------*/


        /* New CSS styles for the cus_detailsTable box */
        #cus_detailsTable {
            border: 1px solid #ccc;
            border-radius: 5px;
            padding: 10px;
            margin-top: 20px;
        }

        #cus_detailsDataGrid, #cus_bankdetailsDataGrid, #cus_bankdetailsDataGrid_Modify {
            overflow-y: auto;
            font-size: 14px;
            width: 100%;
            font-weight: 500;
            border-collapse: collapse; /* Ensures table borders are collapsed */
        }

            #cus_detailsDataGrid th,
            #cus_detailsDataGrid td, #cus_bankdetailsDataGrid th,
            #cus_bankdetailsDataGrid td, #cus_bankdetailsDataGrid_Modify th,
            #cus_bankdetailsDataGrid_Modify td {
                border: 1px solid #ccc;
                padding: 8px;
                text-align: center; /* Adjust alignment as needed */
            }

            /* Styling for table header */
            #cus_detailsDataGrid th, #cus_bankdetailsDataGrid th, #cus_bankdetailsDataGrid_Modify th {
                background-color: #4D759A; /* Light blue background color for headers */
                color: white; /* Dark text color for headers */
            }


        /*   ----------------------------------------------------------------------------*/


        /* Adjusted styles for input fields */
        .input-group {
            width: 100%; /* Ensures inputs take full width of parent container */
        }

        .input-group-text {
            width: 140px; /* Adjusted width for the label spans */
            text-align: left; /* Left-align text in labels */
        }

        .form-control {
            width: calc(100% - 150px); /* Adjusted width for input fields */
        }

        /* -------------------------------------------------------------------*/



        /* ---------------------------------For AutocompleteSuggestions----------------*/


        .ui-menu-item-custom {
            font-size: 8px; /* Adjust this value as needed */
            padding: 10px;
        }

        /* Ensure the autocomplete dropdown has scrolling */
        .ui-autocomplete {
            max-height: 200px; /* Height before scrolling starts */
            overflow-y: auto; /* Enable vertical scrolling */
            overflow-x: hidden; /* Hide horizontal scrolling */
            /* Optional: add padding and border to make it more visible */
            padding: 0;
            border: 1px solid #ccc;
        }

        /* Additional styles for better appearance */
        .ui-menu-item-custom {
            background-color: #fff;
            border-bottom: 1px solid #ddd;
        }

            .ui-menu-item-custom:hover {
                background-color: #f1f1f1;
            }

     
        /* ------------------------------------------------*/

        .modify-bank-details-container {
            border: 1px solid #ccc; /* Border style */
            padding: 10px; /* Padding inside the container */
            border-radius: 5px; /* Rounded corners */
            display: inline-block; /* Display as inline block */
            min-width: fit-content; /* Adjust width based on content */
            margin: 0 auto; /* Center the container horizontally */
        }

        .modify-bank-details {
            color: blue; /* Text color */
            font-size: 16px; /* Font size */
        }




        /* ----------------------------------------------------------------------*/

      
        body {
            margin: 0;
            padding: 0;
        }

        .popup {
            display: none;
            position: absolute;
            width: 600px; /* Fixed width */
            height: 500px; /* Fixed height */
            background-color: white;
            border: 1px solid #888;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);
            z-index: 1000;
            padding: 20px;
            box-sizing: border-box;
            cursor: move;
            overflow: hidden; /* Ensure content doesn't overflow */
        }

        /*.popup-content img, .popup-content object {
             width: 100%;
             height: 100%;*/ /* Fill the popup container */
        /*object-fit: cover;*/ /* Ensure the content covers the available space */
        /*}*/
        .popup-content {
            width: 100%;
            height: 100%;
            /* overflow: auto;*/ /* Enable scrolling */
        }

            .popup-content img {
                max-width: 100%;
                max-height: 100%;
                display: block;
                margin: auto;
            }

            .popup-content object {
                width: 100%;
                height: 100%;
            }

        .popup-header {
            background-color: #f1f1f1;
            padding: 10px;
            cursor: move;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .popup-title {
            margin: 0;
        }

        .close {
            color: #000;
            font-size: 24px;
            font-weight: bold;
            cursor: pointer;
        }

            .close:hover {
                color: red;
            }


        /* Optional: Make the background semi-transparent */
        .overlay {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.3);
            z-index: 999;
        }

    </style>

</head>
<body>
    <div class="app-main__inner">

        <div style="height: 50px; display: flex; align-items: center; justify-content: center;">
            <div class="card-title">
                <h6>Add Bank Details</h6>
            </div>
        </div>

        <div class="search-container">
            <div style="padding: 5px;">
                <label>Search With </label>
                <input type="radio" id="customerNameRadio" name="searchType" value="customerName" onclick="validateInput()">
                <label for="customerNameRadio" class="radio-label">Customer Name</label>

                <input type="radio" id="customerIdRadio" name="searchType" value="customerId" onclick="validateInput()">
                <label for="customerIdRadio" class="radio-label">Customer ID</label>

                <input type="radio" id="phoneNoRadio" name="searchType" value="phoneNo" onclick="validateInput()">
                <label for="phoneNoRadio" class="radio-label">Phone No</label>

                @*<input type="text" style="width: 220px;" id="searchInput" name="searchInput" placeholder="Enter search keyword..." oninput="validateInput()">*@

                @* Hidden field to store selected customer ID *@
                @Html.HiddenFor(m => m.customerId, new { id = "customerId" })

                <div class="dropdown">
                    @* Textbox for autocomplete search *@
                    @Html.TextBoxFor(m => m.SearchInput, new { id = "searchInput", @class = "form-control", placeholder = "Enter search keyword..." })
                    @*@Html.TextBoxFor(m => m.SearchInput, new { id = "searchInput", @class = "form-control", placeholder = "Enter search keyword..." })*@

                    <div class="dropdown-content" id="suggestionsList">
                        <!-- Suggestions will be dynamically added here -->
                    </div>
                </div>

                <!-- Search button (initially shown) -->
                <button type="button" id="searchButton" onclick="search()">Search</button>

                <!-- Search2 button (initially hidden) -->
                <button type="button" id="searchButton2" onclick="search2()" style="display: none;">Search</button>
            </div>
        </div>

        <div id="cus_detailsTable" style="display: none;">
            <div class="customer-details-section" style="padding: 8px; text-align: center;">

                <table id="cus_detailsDataGrid" class="table table-hover table-striped table-bordered">
                    <thead>
                        <tr>
                            <th>Customer Name</th>
                            <th>Address</th>
                            <th>Mobile No</th>
                            <th>Branch</th>
                            <th>Remarks</th>
                        </tr>
                    </thead>
                    <tbody>
                        @*<tr>
                    <td>Anu</td>
                    <td>Nandavanam(H)</td>
                    <td>7034597062</td>
                    <td>Thrissur</td>
                    <td>&nbsp;</td>
                </tr>*@
                    </tbody>
                </table>


                <div id="bank_d1" style="display:none">

                    <table id="cus_bankdetailsDataGrid" class="table table-hover table-striped table-bordered">
                        <thead>
                            <tr>
                                @*<th>Customer ID</th>*@
                                <th>View Document</th>
                                <th>Bank</th>
                                <th>IFSC</th>
                                <th>Payee</th>
                                <th>Account Number</th>
                                <th>Status</th>
                                <th>Branch</th>
                            </tr>
                        </thead>
                        <tbody>
                            @*<tr>
                        <td>Anu</td>
                        <td>Nandavanam(H)</td>
                        <td>7034597062</td>
                        <td>Thrissur</td>
                        <td>&nbsp;</td>
                    </tr>*@
                        </tbody>
                    </table>
                    <table id="cus_bankdetailsDataGrid_Modify" class="table table-hover table-striped table-bordered">
                        <thead>
                            <tr>
                                @*<th>Customer ID</th>*@
                                <th>View Document</th>
                                <th>Bank</th>
                                <th>IFSC</th>
                                <th>Payee</th>
                                <th>Account Number</th>
                                <th>Status</th>
                                <th>Branch</th>
                            </tr>
                        </thead>
                        <tbody>
                            @*<tr>
                        <td>Anu</td>
                        <td>Nandavanam(H)</td>
                        <td>7034597062</td>
                        <td>Thrissur</td>
                        <td>&nbsp;</td>
                    </tr>*@
                        </tbody>
                    </table>

                    <div class="modify-bank-details-container" id="modify">
                        <div class="modify-bank-details">
                            <label>Do you want to modify the existing bank details?</label>
                            <!-- Add a radio button here -->
                            <input type="radio" name="modifyOption" value="yes"> Yes
                            <input type="radio" name="modifyOption" value="no" checked> No
                        </div>
                    </div>

                </div>
                <br />






                <!-- HTML for Simple Pop-Up -->
                <!--<div id="simplePopup" class="popup">
        <div class="popup-header">
            <span class="popup-title">Image/Document Preview</span>
            <span class="close">&times;</span>
        </div>
        <div class="popup-content" id="popupContent" style="height:90%;">-->
                <!-- Content (image or PDF) will be dynamically inserted here -->
                <!--</div>
    </div>-->


                <div id="mediaModal" style="display: none; position: fixed; top: 0; left: 0; width: 100%; height: 100%; padding-top: 50px; background-color: rgba(0,0,0,0); z-index: 1000;">
                    <div id="mediaModalContent" style="position: relative; cursor: move; margin: auto; padding: 40px; width: 60%; height: 90%; ">
                        <div id="pdfViewer" style="width: 100%; cursor: move; height: calc(100% - 40px);"></div>

                        @*Zoom Controls*@
                        <div id="zoomControls" style="text-align:center;">

                            <button id="zoomIn" style="margin-right: 10px; background:transparent; border:none; font-size:24px; cursor:pointer;">
                                <i class="fas fa-search-plus"></i>
                            </button>

                            <!-- Zoom Out button with icon -->
                            <button id="zoomOut" style="background:transparent; border:none; font-size:24px; cursor:pointer;">
                                <i class="fas fa-search-minus"></i>
                            </button>
                            <!-- Rotate button with icon -->
                            <button id="rotateImage" style="background:transparent; border:none; font-size:24px; cursor:pointer;">
                                <i class="fas fa-sync-alt"></i>
                            </button>
                        </div>


                        @*<button onclick="closeModal()" style="position:absolute; top:10px; right:10px; background:transparent; border:none; font-size:24px; cursor:pointer;">
                            <i class="fas fa-times"></i>
                        </button>*@
                        @*</div>*@
                    </div>
                </div>
                <!-- Overlay -->
                <div id="overlay" class="overlay"></div>





                <div id="bank_d" @*style="display: none"*@>

                    <form action="@Url.Action("add_details", "Customer_AddBank")" method="post" id="bank_request" enctype="multipart/form-data" @*onsubmit="return validateForm()"*@>


                        <!-- First Row -->
                        <div class="row" style="width: 140%;">
                            <div class="col-md-6 col-lg-4">
                                <div class="input-group mb-3">
                                    <div class="input-group-prepend">
                                        <span style="width: 140px;" class="input-group-text" id="basic-addon1">Payee Name</span>
                                    </div>
                                    <input type="text" class="form-control" required placeholder="" id="PayeeName" name="PayeeName" aria-label="" aria-describedby="basic-addon1" autocomplete="off" maxlength="20" required />
                                </div>
                            </div>

                            <div class="col-md-6 col-lg-4">
                                <div class="input-group mb-3">
                                    <div class="input-group-prepend">
                                        <span style="width: 140px;" class="input-group-text">IFSC Code </span>
                                    </div>
                                    @*<input type="text" class="form-control" placeholder="" id="ifscInput" name="ifscInput" aria-label="" aria-describedby="basic-addon1" autocomplete="off" maxlength="11" onfocusout="validateIFSCInput()" onchange="fetchBankDetails()" required />*@

                                    <input type="text" class="form-control" placeholder="" id="ifscInput" name="ifscInput" aria-label="" aria-describedby="basic-addon1" autocomplete="off" maxlength="11" oninput="convertToUppercase(this)" onfocusout="validateIFSCInput()" onchange="fetchBankDetails()" required />

                                    <span id="ifsc-error" style="color: red; font-size:small;"></span>
                                </div>
                            </div>
                        </div>


                        <!-- Second Row -->
                        <div class="row" style="width: 140%;">
                            <div class="col-md-6 col-lg-4">
                                <div class="input-group mb-3">
                                    <div class="input-group-prepend">
                                        <span style="width: 140px;" class="input-group-text" id="basic-addon1">Bank</span>
                                    </div>
                                    <input type="text" class="form-control" readonly placeholder="" id="bank" name="bank" aria-label="" aria-describedby="basic-addon1" maxlength="10" required />


                                    @*<input type="text" class="form-control"  placeholder="" id="bank" name="bank" aria-label="" aria-describedby="basic-addon1" maxlength="10" @if (Model != null) { <text> value="@Model.bank_name" </text> } />*@
                                    @*<span id="mobileNoValidation" style="color: red; font-size: 12px;"></span>*@
                                </div>
                            </div>

                            <div class="col-md-6 col-lg-4">
                                <div class="input-group mb-3">
                                    <div class="input-group-prepend">
                                        <span style="width: 140px;" class="input-group-text">Branch </span>
                                    </div>
                                    <input type="text" class="form-control" readonly placeholder="" id="branch" name="branch" aria-label="" aria-describedby="basic-addon1" style="text-transform: uppercase;" required />


                                    @*<input type="text" class="form-control"  placeholder="" id="branch" name="branch_no" aria-label="" aria-describedby="basic-addon1" style="text-transform: uppercase;"  @if (Model != null) { <text> value="@Model.branch_name" </text> } />*@
                                    @*<span id="idProofNoValidation" style="color: red;font-size:12px;"></span>*@
                                </div>
                            </div>
                        </div>

                        <!-- Third Row -->
                        <div class="row" style="width: 140%;">
                            <div class="col-md-6 col-lg-4">
                                <div class="input-group mb-3">
                                    <div class="input-group-prepend">
                                        <span style="width: 140px;" class="input-group-text">Bank A/C No</span>
                                    </div>
                                    <input type="text" class="form-control" placeholder="" id="AccountNumber" name="AccountNumber" aria-label="" aria-describedby="basic-addon1" autocomplete="off" maxlength="30" onkeyup="this.value=this.value.replace(/[^a-zA-Z0-9]/g, '')" required />

                                </div>
                            </div>

                            <div class="col-md-6 col-lg-4">
                                <div class="input-group mb-3">
                                    <div class="input-group-prepend">
                                        <span style="width: 140px;" class="input-group-text">Upload Bank Details</span>&nbsp;
                                        <input type="file" id="image" name="image" style="font-size: 15px;" required />
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row justify-content-center">
                            <div class="col-md-6">
                                @*<button type="button" style="font-size:15px;" class="btn btn-primary btn-lg btn-block">Request</button>*@
                                <button type="submit" id="btn_sumit" style="font-size: 15px;" class="btn btn-primary btn-lg btn-block">Request</button>

                            </div>
                        </div>

                    </form>

                </div>
            </div>
        </div>



        <script>
            $(document).ready(function () {
                // Listen for change event on radio buttons
                $('input[name="modifyOption"]').change(function () {
                    if ($(this).val() === 'yes') {
                        $('#bank_d').show(); // Show the bank_d div if "Yes" is selected
                    } else {
                        $('#bank_d').hide(); // Hide the bank_d div if "No" is selected
                    }
                });
            });
        </script>


        <script>

            function validateInput() {
                var radioButtons = document.getElementsByName("searchType");
                var searchInput = $("#searchInput");

                // Clear input and suggestions when changing radio button
                searchInput.val(""); // Clear input field

                // Clear suggestions list
                $("#suggestionsList").empty();

                // Remove selected class from all labels
                $(".radio-label").removeClass("selected");

                // Determine which radio button is checked
                var selectedValue;
                for (var i = 0; i < radioButtons.length; i++) {
                    if (radioButtons[i].checked) {
                        selectedValue = radioButtons[i].value;
                        // Add selected class to the corresponding label
                        $(`label[for=${radioButtons[i].id}]`).addClass("selected");
                        break;
                    }
                }

                // Remove previous event handlers
                searchInput.off("input keypress");

                // Set validation based on the selected radio button
                if (selectedValue === "customerName") {
                    // Allow only alphabetic characters
                    searchInput.attr("pattern", "[a-zA-Z ]+");
                    searchInput.attr("title", "Only alphabetic characters are allowed");
                    $("#cus_detailsTable").hide();
                    $("#searchButton2").hide();
                    $("#searchButton").show();

                    // Restrict input to only letters and spaces
                    searchInput.on("input", function () {
                        this.value = this.value.replace(/[^a-zA-Z ]+/g, ''); // Remove non-alphabetic characters
                    });
                } else if (selectedValue === "customerId" || selectedValue === "phoneNo") {
                    // Allow only numbers
                    searchInput.attr("pattern", "[0-9]*");
                    searchInput.attr("title", "Only numbers are allowed");
                    localStorage.setItem('name_phone', '0');
                    $("#cus_detailsTable").hide();
                    $("#searchButton2").toggle(selectedValue === "customerId");
                    $("#searchButton").toggle(selectedValue === "phoneNo");

                    // Restrict input to only numbers
                    searchInput.on("input", function () {
                        this.value = this.value.replace(/[^0-9]/g, ''); // Remove non-numeric characters
                    });

                    // Optionally handle keypress event for numbers
                    searchInput.on("keypress", function (event) {
                        return event.charCode >= 48 && event.charCode <= 57; // Allow only numeric input
                    });
                }

                // Focus the search input field
                searchInput.focus();
            }





            /* ---------------------------------For AutocompleteSuggestions----------------*/

            $(function () {
                $("#searchInput").autocomplete({

                    source: function (request, response) {
                        $.ajax({
                            url: "@Url.Action("AutocompleteSuggestions", "Customer_AddBank")",
                            dataType: "json",
                            data: {
                                term: request.term
                            },
                            success: function (data) {
                                response($.map(data, function (item) {
                                    return {
                                        label: item.label,
                                        value: item.value
                                    };
                                }));
                            },
                            error: function (xhr, status, error) {
                                console.error('Error:', status, error);
                            }
                        });
                    },
                    minLength: 1, // Minimum characters before triggering autocomplete
                    classes: {
                        "ui-autocomplete": "ui-menu-item-custom" // Apply custom class to suggestion list
                    },
                    select: function (event, ui) {
                        // When an item is selected, update the input field with the selected value
                        $("#searchInput").val(ui.item.label);
                        $("#customerId").val(ui.item.value); // Optionally, store customer ID if needed
                        $(".dropdown-content").hide(); // Hide suggestions dropdown

                        // Hide Search button and show Search2 button
                        $("#searchButton").hide();
                        $("#searchButton2").show();

                        return false; // Prevent the widget from inserting the selected value into the input field
                    }
                });
            });



             //script with 'No suggestion msg alert..'

            function search() {
                  if ($("#searchInput").val() == "") {
                      alert("Please enter a value");
                      $("#searchInput").focus();
                      return; // Exit function early if input is empty
                  }

                  var input = $("#searchInput").val();
                  if (input.length > 2) {
                      $.ajax({
                          url: "@Url.Action("AutocompleteSuggestions", "Customer_AddBank")",
                          type: "GET",
                          data: { term: input },
                          success: function (data) {
                              try {
                                  $("#suggestionsList").empty();

                                  if (data.length === 0) {
                                      // Handle case where no suggestions are returned
                                      alert("No suggestions found.");
                                      return;
                                  }

                                  $.each(data, function (index, item) {
                                      var listItem = $("<div>" + item.label + "</div>");
                                      listItem.click(function () {
                                          localStorage.setItem('name_phone', '1');
                                          // Handle click on suggestion item (item.value is the customer_id)
                                          console.log("Clicked:", item.label, item.value);
                                          $("#searchInput").val(item.label); // Set customer name in the input field
                                          $("#customerId").val(item.value); // Set customer ID in hidden input
                                          $(".dropdown-content").hide(); // Hide suggestions dropdown

                                          // Hide Search button and show Search2 button
                                          $("#searchButton").hide();
                                          $("#searchButton2").show();

                                          // Optionally, you can perform actions when a suggestion is clicked
                                      });
                                      $("#suggestionsList").append(listItem);
                                  });
                                  $(".dropdown-content").show();
                              } catch (error) {
                                  console.error("Error processing autocomplete response:", error);
                              }
                          },
                          error: function (xhr, status, error) {
                              console.error("AJAX Error:", error);
                          }
                      });
                  } else {
                      $("#suggestionsList").empty();
                      $(".dropdown-content").hide();
                  }
              }






              function search2() {
                 if ($("#searchInput").val() == "") {
                     alert("Please Enter the value");
                     $("#searchInput").focus();
                     return;
                 }


                 var customerId = $("#customerId").val(); // Retrieve the current value of customerId
                 var name_phone = localStorage.getItem('name_phone');

                 // Check if customerId is empty
                 if (name_phone === "0") {
                     var searchInputValue = $('#searchInput').val(); // Get the value from the search input
                     $('#customerId').val(searchInputValue); // Assign the value to the element with ID 'customerId'

                     // Update the customerId variable after assigning the new value
                     customerId = searchInputValue;
                 }

                 $.ajax({
                     url: '@Url.Action("SearchCustomerDetails", "Customer_AddBank")',
                     type: 'POST',
                     dataType: 'json',
                     data: { customerId: customerId },
                     success: function (data) {


                         if (data.error) {

                             alert("No data found.");

                             console.error('Error:', data.error);
                             // Handle error case
                         } else {


                             $("#cus_detailsTable").show();

                             // Update the customer details table or display them as needed
                             $("#cus_detailsDataGrid tbody").empty(); // Clear previous data if any

                             // Display customer details
                             var customerDetails = data.customerDetails;
                             var newRow = "<tr>" +
                                 "<td>" + customerDetails.customerName + "</td>" +
                                 "<td>" + customerDetails.address + "</td>" +
                                 "<td>" + customerDetails.mobileNo + "</td>" +
                                 "<td>" + customerDetails.branch + "</td>" +
                                 "<td>" + customerDetails.remarks + "</td>" +
                                 "</tr>";
                             $("#cus_detailsDataGrid tbody").append(newRow);

                             if (data.outmessage == 1) {
                                 if (data.liveStatus == 1 && data.modifyStatus == 1) {
                                     $("#cus_bankdetailsDataGrid tbody").empty(); // Clear previous data if any

                                     // Display customer bank details if available
                                     var customerBankDetails = data.customerBankDetails;

                                     if (customerBankDetails.Bank) {
                                         //alert(customerBankDetails.Bank);
                                         var bankRow = "<tr>" +
                                         //"<td><button class='btn btn-link' onclick='displayPhoto(\"" + customerBankDetails.ImageUrl + "\", \"" + customerBankDetails.ImageType + "\")'>View Image</button></td>" +
                                             "<td><button class='btn btn-link' onclick='ViewDoc(0)'>View Image</button></td>" +
                                             "<td>" + customerBankDetails.Bank + "</td>" +
                                             "<td>" + customerBankDetails.IFSC + "</td>" +
                                             "<td>" + customerBankDetails.Payee + "</td>" +
                                             "<td>" + customerBankDetails.Account + "</td>" +
                                             "<td>" + customerBankDetails.Status + "</td>" +
                                             "<td>" + customerBankDetails.Branch + "</td>" +
                                             "</tr>";
                                         $("#cus_bankdetailsDataGrid tbody").append(bankRow);
                                     }

                                     $("#cus_bankdetailsDataGrid_Modify tbody").empty(); // Clear previous data if any

                                     var customerBankDetailsModify = data.customerBankDetailsModify;

                                     if (customerBankDetailsModify.Bank) {
                                         //alert(customerBankDetails.Bank);
                                         var bankRow = "<tr>" +
                                         // "<td><button class='btn btn-link' onclick='displayPhoto(\"" + customerBankDetailsModify.ImageUrl + "\", \"" + customerBankDetailsModify.ImageType + "\")'>View Image</button></td>" +
                                             "<td><button class='btn btn-link' onclick='ViewDoc(1)'>View Image</button></td>" +
                                             "<td>" + customerBankDetailsModify.Bank + "</td>" +
                                             "<td>" + customerBankDetailsModify.IFSC + "</td>" +
                                             "<td>" + customerBankDetailsModify.Payee + "</td>" +
                                             "<td>" + customerBankDetailsModify.Account + "</td>" +
                                             "<td>" + customerBankDetailsModify.Status + "</td>" +
                                             "<td>" + customerBankDetailsModify.Branch + "</td>" +
                                             "</tr>";
                                         $("#cus_bankdetailsDataGrid_Modify tbody").append(bankRow);
                                     }

                                     // Show the bank_d1 div when customer bank details are displayed
                                     $('#bank_d1').show();
                                     $('#cus_bankdetailsDataGrid_Modify').show();


                                     $('#bank_d').hide(); //Div for input Bank Details

                                     $('#modify').hide();

                                 }
                                 else if (data.liveStatus == 1 && data.modifyStatus == 0) {

                                     $("#cus_bankdetailsDataGrid tbody").empty(); // Clear previous data if any

                                     // Display customer bank details if available
                                     var customerBankDetails = data.customerBankDetails;

                                     if (customerBankDetails.Bank) {
                                         //alert(customerBankDetails.Bank);
                                         var bankRow = "<tr>" +
                                         //"<td><button class='btn btn-link' onclick='displayPhoto(\"" + customerBankDetails.ImageUrl + "\", \"" + customerBankDetails.ImageType + "\")'>View Image</button></td>" +
                                             "<td><button class='btn btn-link' onclick='ViewDoc(0)'>View Image</button></td>" +
                                             "<td>" + customerBankDetails.Bank + "</td>" +
                                             "<td>" + customerBankDetails.IFSC + "</td>" +
                                             "<td>" + customerBankDetails.Payee + "</td>" +
                                             "<td>" + customerBankDetails.Account + "</td>" +
                                             "<td>" + customerBankDetails.Status + "</td>" +
                                             "<td>" + customerBankDetails.Branch + "</td>" +
                                             "</tr>";
                                         $("#cus_bankdetailsDataGrid tbody").append(bankRow);
                                     }
                                     $('#bank_d1').show();
                                     $('#cus_bankdetailsDataGrid_Modify').hide();
                                     $('#bank_d').hide(); //Div for input Bank Details
                                     $('#modify').show();
                                 }
                                 else if (data.liveStatus == 0 && data.modifyStatus == 0) {
                                     $("#cus_bankdetailsDataGrid tbody").empty(); // Clear previous data if any

                                     // Display customer bank details if available
                                     var customerBankDetails = data.customerBankDetails;

                                     if (customerBankDetails.Bank) {
                                         //alert(customerBankDetails.Bank);
                                         var bankRow = "<tr>" +
                                         //"<td><button class='btn btn-link' onclick='displayPhoto(\"" + customerBankDetails.ImageUrl + "\", \"" + customerBankDetails.ImageType + "\")'>View Image</button></td>" +
                                             "<td><button class='btn btn-link' onclick='ViewDoc(0)'>View Image</button></td>" +
                                             "<td>" + customerBankDetails.Bank + "</td>" +
                                             "<td>" + customerBankDetails.IFSC + "</td>" +
                                             "<td>" + customerBankDetails.Payee + "</td>" +
                                             "<td>" + customerBankDetails.Account + "</td>" +
                                             "<td>" + customerBankDetails.Status + "</td>" +
                                             "<td>" + customerBankDetails.Branch + "</td>" +
                                             "</tr>";
                                         $("#cus_bankdetailsDataGrid tbody").append(bankRow);
                                     }
                                     $('#bank_d1').show();
                                     $('#cus_bankdetailsDataGrid_Modify').hide();
                                     $('#bank_d').hide(); //Div for input Bank Details
                                     $('#modify').hide();
                                 }
                                 else {

                                 }

                             }
                             else {

                                 $('#bank_d1').hide();
                                 $('#cus_bankdetailsDataGrid_Modify').hide();
                                 $('#bank_d').show(); //Div for input Bank Details
                                 $('#modify').hide();

                             }






                         }
                     },
                     error: function (xhr, status, error) {
                         // console.error('Error:', error);
                        // alert(error);
                         // Handle AJAX error
                         alert('Error: ' + error + '\nStatus: ' + status + '\nStatus Code: ' + xhr.status + '\nResponse: ' + xhr.responseText);
                     }
                 });
             }






        </script>

        @*<script>

            function validateIFSCInput() {
                const inputElement = document.getElementById('ifscInput');
                const validationMessage = document.getElementById('ifsc-error');
                const ifscCode = inputElement.value.trim();

                const ifscPattern = /^[A-Z]{4}0[A-Z0-9]{6}$/;
                const isValid = ifscPattern.test(ifscCode);

                if (!isValid) {
                    validationMessage.textContent = "Invalid IFSC code.Please check again and enter correct IFSC";
                    validationMessage.style.color = "red";
                    return false;
                } else {
                    validationMessage.textContent = ""; // Clear error message if valid
                    return true;
                }
            }

            $(document).ready(function () {
                // This handler clears the validation message on input
                $('#ifscInput').on('input', function () {
                    const inputText = $(this).val().trim();
                    if (inputText !== '') {
                        $('#ifsc-error').text(''); // Clear error message
                    }
                });
            });

            $('#ifscInput').on('click', function () {
                $('#ifsc-error').text(''); // Clear error message on click
            });

            $('#ifscInput').on('blur', function () {
                validateIFSCInput(); // Validate on focus out
            });


                  function fetchBankDetails() {
                    if (!validateIFSCInput()) {
                        return; // Exit function if IFSC code is invalid
                    }

                    var ifsc = $('#ifscInput').val().trim();
                    if (ifsc !== '') {
                        $.ajax({
                            url: '@Url.Action("FetchBankDetails", "Customer_AddBank")',
                            type: 'POST',
                            dataType: 'json',
                            data: { ifsc: ifsc },
                            success: function (data) {
                                if (!data.error) {
                                    $('#ifsc-error').text(''); // Clear any previous error message
                                    $('#bank').val(data.bank_name); // Populate bank name
                                    $('#branch').val(data.branch_name); // Populate branch name
                                } else {
                                    alert(data.error);
                                    $('#ifsc-error').text(data.error).css('color', 'red');
                                    $('#bank').val(''); // Clear bank name field
                                    $('#branch').val(''); // Clear branch name field
                                }
                            },
                            error: function (xhr, status, error) {
                                console.error('Error fetching bank details:', error);
                                alert('Error fetching bank details: ' + error);
                                $('#ifsc-error').text('Error fetching bank details').css('color', 'red');
                                $('#bank').val(''); // Clear bank name field
                                $('#branch').val(''); // Clear branch name field
                            }
                        });
                    }
                }


        </script>*@
        <script>


            function convertToUppercase(input) {
                input.value = input.value.toUpperCase();
            }


    function validateIFSCInput() {
        const inputElement = document.getElementById('ifscInput');
        const validationMessage = document.getElementById('ifsc-error');
        const ifscCode = inputElement.value.trim();

        const ifscPattern = /^[A-Z]{4}0[A-Z0-9]{6}$/;
        const isValid = ifscPattern.test(ifscCode);

        if (!isValid) {
            validationMessage.textContent = "Invalid IFSC code. Please check again and enter the correct IFSC.";
            validationMessage.style.color = "red";
            return false;
        } else {
            validationMessage.textContent = ""; // Clear error message if valid
            return true;
        }
    }

    $(document).ready(function () {
        // This handler clears the validation message on input
        $('#ifscInput').on('input', function () {
            const inputText = $(this).val().trim();
            if (inputText !== '') {
                $('#ifsc-error').text(''); // Clear error message
            }
        });

        // Clear fields and validation message on IFSC input change
        $('#ifscInput').on('input', function () {
            $('#bank').val(''); // Clear bank field
            $('#branch').val(''); // Clear branch field
            $('#ifsc-error').text(''); // Clear error message
        });

        $('#ifscInput').on('blur', function () {
            validateIFSCInput(); // Validate on focus out
        });

        $('#ifscInput').on('change', function () {
            fetchBankDetails(); // Fetch bank details on change
        });
    });

    function fetchBankDetails() {
        if (!validateIFSCInput()) {
            return; // Exit function if IFSC code is invalid
        }

        var ifsc = $('#ifscInput').val().trim();
        if (ifsc !== '') {
            // Clear bank and branch fields before making the AJAX request
            $('#bank').val('');
            $('#branch').val('');

            $.ajax({
                url: '@Url.Action("FetchBankDetails", "Customer_AddBank")',
                type: 'POST',
                dataType: 'json',
                data: { ifsc: ifsc },
                success: function (data) {
                    if (!data.error) {
                        $('#ifsc-error').text(''); // Clear any previous error message
                        $('#bank').val(data.bank_name); // Populate bank name
                        $('#branch').val(data.branch_name); // Populate branch name
                    } else {
                        alert(data.error);
                        $('#ifsc-error').text(data.error).css('color', 'red');
                        $('#bank').val(''); // Clear bank name field
                        $('#branch').val(''); // Clear branch name field
                    }
                },
                error: function (xhr, status, error) {
                    console.error('Error fetching bank details:', error);
                    alert('Error fetching bank details: ' + error);
                    $('#ifsc-error').text('Error fetching bank details').css('color', 'red');
                    $('#bank').val(''); // Clear bank name field
                    $('#branch').val(''); // Clear branch name field
                }
            });
        }
    }
        </script>


        <script type="text/javascript">
            $(document).ready(function () {
                // Assuming your form has an id="bankForm"
                $('#bank_request').submit(function (event) {
                    event.preventDefault(); // Prevent normal form submission



                    var image = document.getElementById('image').files[0]; // Assuming 'image' is the ID of the file input for the first file

                    if (image && image.size > 1 * 1024 * 1024) { // Check if the first file exceeds 3 MB
                        alert("The file size exceeds 1 MB limit.");
                        return false; // Prevent form submission
                    }

                    // Get the values of Bank and Branch fields
                    var bank = $('#bank').val().trim();
                    var branch = $('#branch').val().trim();

                    // Validate Bank and Branch fields
                    if (bank === '') {
                        alert('Bank is required.');
                        return false; // Prevent form submission
                    }


                    // Serialize the form data
                    var formData = new FormData($(this)[0]);

                   $.ajax({
                        url: '@Url.Action("add_details", "Customer_AddBank")',
                        type: 'POST',
                        data: formData,
                        processData: false,
                        contentType: false,
                        dataType: 'json', // Specify dataType as JSON

                       success: function (response) {
                            // Handle success response
                           if (response.success) {
                                alert(response.message); // Show success message
                                window.location.reload(); // Optional: reload the page after success
                            } else {
                                alert(response.message); // Show error message
                            }
                        },
                       error: function (xhr, status, error) {
                           alert("error");
                            // Handle error response
                            alert('Error: ' + error); // Show error message if AJAX request fails
                        }
                    });

                });
            });
        </script>



        <script>
            function ViewDoc(modify_status) {
                //alert(1);
                //var modi = modify_status
                $.ajax({
                    url: "@Url.Action("View_Image", "Customer_AddBank")",
                    type: 'GET',
                    data: { modify_status: modify_status },
                    dataType: 'json',
                    success: function (data) {

                        if (data.error) {

                            alert("No data found.");

                            console.error('Error:', data.error);
                            // Handle error case
                        } else {

                            if (data.ImageUrl) {
                                //alert(data.ImageUrl);
                                //$("#customerPhoto").empty();
                                displayPhoto(data.ImageUrl, data.ImageType);
                            } else {
                                alert('Data is undefined.');
                            }
                        }
                    },
                    error: function (xhr, status, error) {
                        alert(error);
                       // console.error('Error:', status, error);
                    }
                });
            }


            function displayPhoto(dataUrl, type) {
                // alert("display");
                var modal = document.getElementById('mediaModal');
                var content = document.getElementById('pdfViewer'); // Use pdfViewer as content

                if (type === 'pdf') {
                    // Convert base64 to Blob
                    var base64Data = dataUrl.split(',')[1];
                    var binaryString = atob(base64Data);
                    var len = binaryString.length;
                    var bytes = new Uint8Array(len);
                    for (var i = 0; i < len; i++) {
                        bytes[i] = binaryString.charCodeAt(i);
                    }
                    var blob = new Blob([bytes], { type: 'application/pdf' });
                    var blobUrl = URL.createObjectURL(blob);

                    // Embed PDF in an iframe
                    content.innerHTML = `
                      <iframe id="pdfFrame" src="${blobUrl}" style="width:100%; height:400px; border:none; border: 7px solid #ddd;" frameborder="0"></iframe>`;

                    //        content.innerHTML = `
                    ////          <div style="padding-top:25px; padding-left:120px;">
                    ////            <iframe src="${blobUrl}" style="width:100%; height:600px; border:none;" frameborder="0"></iframe>
                    ////          </div>`;

                    // Hide zoom controls for PDFs
                    document.getElementById('zoomControls').style.display = 'none';

                } else if (type === 'image') {
                    content.innerHTML = `
                       <div id="imageWrapper" style="width:700px; height:350px; overflow:auto; background-color:white; border: 7px solid #ddd;">
                           <img id="modalImage" src="${dataUrl}" style="width:600px; padding-left:120px; padding-top:35px; transform: scale(1);" />
                       </div>`;

                    // Show zoom controls for images
                    document.getElementById('zoomControls').style.display = 'block';

                    // Add zoom functionality for image
                    let scale = 1;
                    const zoomStep = 0.1;
                    const modalImage = document.getElementById('modalImage');

                    document.getElementById('zoomIn').addEventListener('click', () => {
                        scale += zoomStep;
                        modalImage.style.transform = `scale(${scale})`;
                    });

                    document.getElementById('zoomOut').addEventListener('click', () => {
                        if (scale > zoomStep) {
                            scale -= zoomStep;
                            modalImage.style.transform = `scale(${scale})`;
                        }
                    });
                }

                modal.style.display = 'block';
            }


            function makeDraggable(element) {
                var isDragging = false;
                var offsetX, offsetY;

                element.onmousedown = function (event) {
                    isDragging = true;
                    offsetX = event.clientX - element.getBoundingClientRect().left;
                    offsetY = event.clientY - element.getBoundingClientRect().top;

                    document.onmousemove = function (event) {
                        if (isDragging) {
                            var modal = document.getElementById('mediaModal');
                            modal.style.left = (event.clientX - offsetX) + 'px';
                            modal.style.top = (event.clientY - offsetY) + 'px';
                        }
                    };

                    document.onmouseup = function () {
                        isDragging = false;
                        document.onmousemove = null;
                    };
                };
            }

            // Apply dragging functionality to the header
            document.getElementById('mediaModalContent').addEventListener('mousedown', function (event) {
                makeDraggable(document.getElementById('mediaModal'));
            });



            // Apply dragging functionality to the header
            document.getElementById('pdfViewer').addEventListener('mousedown', function (event) {
                makeDraggable(document.getElementById('mediaModal'));
            });


            window.onclick = function (event) {
                //  alert("mediaModal click");
                var modal = document.getElementById("mediaModal");
                if (event.target == modal) {
                    closeModal();
                }
            }

            function closeModal() {
                 //alert("close");
                var modal = document.getElementById("mediaModal");
                modal.style.display = "none";
            }

            let rotationAngle = 0;

            document.getElementById('rotateImage').addEventListener('click', function () {
                rotationAngle += 90; // Rotate by 90 degrees each time the button is clicked
                document.getElementById('modalImage').style.transform = 'rotate(' + rotationAngle + 'deg)';
            });


            
            //function displayPopup(fileUrl, fileType) {
            //    var popup = document.getElementById("simplePopup");
            //    var popupContent = document.getElementById("popupContent");

            //    var overlay = document.getElementById("overlay");
            //    overlay.style.display = "block";

            //    popup.style.display = "block";
            //    popupContent.innerHTML = "";

            //    if (fileType === "image") {
            //        var img = document.createElement("img");
            //        img.src = fileUrl;
            //        popupContent.appendChild(img);
            //    } else if (fileType === "pdf") {
            //        var object = document.createElement("object");
            //        object.data = fileUrl;
            //        object.type = "application/pdf";
            //        object.width = "100%";
            //        object.height = "100%";
            //        popupContent.appendChild(object);
            //    }

            //    document.querySelector(".popup .close").addEventListener("click", function () {
            //        closePopup();
            //    });

            //    overlay.addEventListener("click", function () {
            //        closePopup();
            //    });
            //}


            //function closePopup() {
            //    var popup = document.getElementById("simplePopup");
            //    var overlay = document.getElementById("overlay");
            //    popup.style.display = "none";
            //    overlay.style.display = "none";
            //}

            //// Make the popup draggable
            //dragElement(document.getElementById("simplePopup"));

            //function dragElement(elmnt) {
            //    var pos1 = 0, pos2 = 0, pos3 = 0, pos4 = 0;
            //    if (document.querySelector(".popup-header")) {
            //        // if present, the header is where you move the DIV from:
            //        document.querySelector(".popup-header").onmousedown = dragMouseDown;
            //    } else {
            //        // otherwise, move the DIV from anywhere inside the DIV:
            //        elmnt.onmousedown = dragMouseDown;
            //    }

            //    function dragMouseDown(e) {
            //        e = e || window.event;
            //        e.preventDefault();
            //        // get the mouse cursor position at startup:
            //        pos3 = e.clientX;
            //        pos4 = e.clientY;
            //        document.onmouseup = closeDragElement;
            //        // call a function whenever the cursor moves:
            //        document.onmousemove = elementDrag;
            //    }

            //    function elementDrag(e) {
            //        e = e || window.event;
            //        e.preventDefault();
            //        // calculate the new cursor position:
            //        pos1 = pos3 - e.clientX;
            //        pos2 = pos4 - e.clientY;
            //        pos3 = e.clientX;
            //        pos4 = e.clientY;
            //        // set the element's new position:
            //        elmnt.style.top = (elmnt.offsetTop - pos2) + "px";
            //        elmnt.style.left = (elmnt.offsetLeft - pos1) + "px";
            //    }

            //    function closeDragElement() {
            //        // stop moving when mouse button is released:
            //        document.onmouseup = null;
            //        document.onmousemove = null;
            //    }
            //}





         
        </script>

      
    </div>

</body>
</html>
